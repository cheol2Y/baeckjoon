# SELECT
#     T1.ID,
#     T1.TECH_STACK,
#     T2.NAME,
#     T2.CODE
# FROM (
#     SELECT
#         ID,
#         CONCAT_WS(',',
#             CASE WHEN (SKILL_CODE & (1 << 14)) <> 0 THEN '16384' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 13)) <> 0 THEN '8192' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 12)) <> 0 THEN '4096' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 11)) <> 0 THEN '2048' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 10)) <> 0 THEN '1024' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 9)) <> 0 THEN '512' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 8)) <> 0 THEN '256' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 7)) <> 0 THEN '128' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 4)) <> 0 THEN '16' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 3)) <> 0 THEN '8' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 2)) <> 0 THEN '4' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & (1 << 1)) <> 0 THEN '2' ELSE NULL END,
#             CASE WHEN (SKILL_CODE & 1) <> 0 THEN '1' ELSE NULL END
#         ) AS TECH_STACK
#     FROM DEVELOPERS
# ) T1
# JOIN SKILLCODES T2
#     ON FIND_IN_SET(T2.CODE, T1.TECH_STACK) > 0






WITH GRADE_INFO AS (
  SELECT
    D.ID,
    D.EMAIL,
    D.SKILL_CODE,
    CASE
      WHEN D.SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'Python') > 0 
        AND D.SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES  WHERE CATEGORY = 'Front End') > 0 THEN 'A'
      WHEN D.SKILL_CODE & (SELECT CODE FROM SKILLCODES  WHERE NAME = 'C#') > 0 THEN 'B'
      WHEN D.SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES  WHERE CATEGORY = 'Front End') > 0 THEN 'C'
      ELSE NULL
    END AS GRADE
  FROM
    DEVELOPERS D
)

SELECT GRADE,ID,EMAIL
FROM GRADE_INFO
WHERE GRADE IS NOT NULL
ORDER BY GRADE, ID